"""remove unused documents table for previous agent-bound document paradigm

Revision ID: 3ebe67f47bad
Revises: b78b6328cb20
Create Date: 2025-10-31 03:29:26.237451

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3ebe67f47bad'
down_revision: Union[str, None] = 'b78b6328cb20'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('documents_agent_run', table_name='documents')
    op.drop_index('ix_documents_agent_name', table_name='documents')
    op.drop_index('ix_documents_run_id', table_name='documents')
    op.drop_table('documents')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('agent_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('run_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('document_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('source_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('upload_user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], name='documents_run_id_fkey'),
    sa.ForeignKeyConstraint(['upload_user_id'], ['users.id'], name='documents_upload_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='documents_pkey')
    )
    op.create_index('ix_documents_run_id', 'documents', ['run_id'], unique=False)
    op.create_index('ix_documents_agent_name', 'documents', ['agent_name'], unique=False)
    op.create_index('documents_agent_run', 'documents', ['agent_name', 'run_id'], unique=False)
    # ### end Alembic commands ###
